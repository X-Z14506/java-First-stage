/*
    死锁要会写，因为死锁很难调试
    synchronized最好不要嵌套使用，一不小心就可能导致死锁现象的发生
 */

public class DeadLockTest {
    public static void main(String[] args) {
        Object o1 = new Object();
        Object o2 = new Object();

        //t1和t2线程共享o1和o2
        Thread t1 = new MyThread1(o1,o2);
        Thread t2 = new MyThread2(o1,o2);

        t1.start();
        t2.start();

    }
}
class MyThread1 extends Thread {
    Object object1;
    Object object2;
    public MyThread1(Object object1,Object object2){
        this.object1 = object1;
        this.object2 = object2;
    }

    @Override
    public void run() {
        synchronized (object1) {
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            synchronized (object2) {

            }
        }
    }
}

class MyThread2 extends Thread {
    Object object1;
    Object object2;
    public MyThread2(Object object1,Object object2){
        this.object1 = object1;
        this.object2 = object2;
    }

    @Override
    public void run() {
        synchronized (object2) {
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            synchronized (object1) {

            }
        }
    }
}
